name: Docker Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-publish-manage:
    runs-on: ubuntu-latest

    steps:
      - name: Check if its a merge commit
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"Merge"* ]]; then
            echo "This is a merge commit, running actions..."
          else
            echo "This is not a merge commit, skipping actions."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set IMAGE_NAME variable
        run: echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/python-tg-script" >> $GITHUB_ENV

      - name: Build Docker image
        run: make IMAGE_NAME=$IMAGE_NAME

      - name: Run tests
        run: make test

      - name: Bump version and tag Docker image
        run: |
          VERSION=$(cat VERSION)
          NEW_VERSION=$((VERSION + 1))
          echo $NEW_VERSION > VERSION
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          docker tag $IMAGE_NAME $IMAGE_NAME:$NEW_VERSION
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}

      - name: Configure Git
        run: |
          git config user.name "github CI: build-and-release.yml"
          git config user.email "gh@example.com"

      - name: Commit Version File
        run: |
          git add VERSION
          git commit -m "Bump to version: ${NEW_VERSION}"
          git push
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          NEW_VERSION: ${{ env.NEW_VERSION }}

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$NEW_VERSION
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          NEW_VERSION: ${{ env.NEW_VERSION }}

  build-and-release-deploy:
    runs-on: ubuntu-latest
    steps:
    
    - name: Check if its a merge commit
      run: |
        if [[ "${{ github.event.head_commit.message }}" == *"Merge"* ]]; then
          echo "This is a merge commit, running actions..."
        else
          echo "This is not a merge commit, skipping actions."
          exit 1
        fi
    
    - name: Checkout Code
      uses: actions/checkout@v2
  
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.21.1
  
    - name: Build for Linux
      run: |
        GOARCH=amd64 GOOS=linux go build -C ./src/deploy -o deploy
      working-directory: ${{ github.workspace }}
  
    - name: Build for Windows
      run: |
        GOARCH=amd64 GOOS=windows go build -C ./src/deploy -o deploy.exe
      working-directory: ${{ github.workspace }}
  
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        files: |
          ./src/deploy/deploy
          ./src/deploy/deploy.exe
        asset-name: deploy-${{ github.sha }}
        tag-name: $(cat VERSION)  
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  
    - name: Upload Release Artifacts
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/deploy/deploy
        asset_name: deploy
        asset_content_type: application/octet-stream
  
    - name: Upload Release Artifacts (Windows)
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./src/deploy/deploy.exe
        asset_name: deploy.exe
        asset_content_type: application/octet-stream
  
