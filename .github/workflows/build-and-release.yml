name: Docker Build and Publish

on:
  push:
    branches:
      - main

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Check if its a merge commit
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"Merge branch"* ]]; then
            echo "This is a merge commit, running actions..."
          else
            echo "This is not a merge commit, skipping actions."
            exit 1
          fi

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set IMAGE_NAME variable
        run: echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/python-tg-script" >> $GITHUB_ENV

      - name: Build Docker image
        run: make IMAGE_NAME=$IMAGE_NAME

      - name: Run tests
        run: make test

      - name: Bump version and tag Docker image
        run: |
          VERSION=$(cat VERSION)
          NEW_VERSION=$((VERSION + 1))
          echo $NEW_VERSION > VERSION
          echo "NEW_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          docker tag $IMAGE_NAME $IMAGE_NAME:$NEW_VERSION
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}

      - name: Configure Git
        run: |
          git config user.name "github CI: build-and-release.yml"
          git config user.email "gh@example.com"

      - name: Commit Version File
        run: |
          git add VERSION
          git commit -m "Bump to version: ${NEW_VERSION}"
          git push
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          NEW_VERSION: ${{ env.NEW_VERSION }}

      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:$NEW_VERSION
        env:
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          NEW_VERSION: ${{ env.NEW_VERSION }}
